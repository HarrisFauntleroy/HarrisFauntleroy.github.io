[{"/home/harrisfauntleroy/Documents/github/HarrisFauntleroy.github.io/src/App.js":"1","/home/harrisfauntleroy/Documents/github/HarrisFauntleroy.github.io/src/index.js":"2","/home/harrisfauntleroy/Documents/github/HarrisFauntleroy.github.io/src/components/Navbar.js":"3"},{"size":312,"mtime":1606372643485,"results":"4","hashOfConfig":"5"},{"size":197,"mtime":1606367268268,"results":"6","hashOfConfig":"5"},{"size":5378,"mtime":1606373116632,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4h7plf",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/home/harrisfauntleroy/Documents/github/HarrisFauntleroy.github.io/src/App.js",["15","16"],"/home/harrisfauntleroy/Documents/github/HarrisFauntleroy.github.io/src/index.js",[],"/home/harrisfauntleroy/Documents/github/HarrisFauntleroy.github.io/src/components/Navbar.js",["17","18","19"],"import React, { useState, useRef, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group'\nimport { ReactComponent as UserIcon } from '../icons/user-solid.svg'\nimport { ReactComponent as TwitterIcon } from '../icons/twitter-brands.svg'\nimport { ReactComponent as SlackIcon } from '../icons/slack-brands.svg'\nimport { ReactComponent as LinkedInIcon } from '../icons/linkedin-brands.svg'\nimport { ReactComponent as LinkIcon } from '../icons/link-solid.svg'\nimport { ReactComponent as InstructablesIcon } from '../icons/instructables.svg'\nimport { ReactComponent as HamburgerIcon } from '../icons/hamburger.svg'\nimport { ReactComponent as GithubIcon } from '../icons/github-brands.svg'\nimport { ReactComponent as DiscordIcon } from '../icons/discord-brands.svg'\nimport { ReactComponent as GearIcon } from '../icons/cog-solid.svg'\nimport { ReactComponent as ArrowRightIcon } from '../icons/arrow-right-solid.svg'\nimport { ReactComponent as ArrowLeftIcon } from '../icons/arrow-left-solid.svg'\n\nexport function Navbar(props) {\n    return (\n        <nav className=\"navbar\">\n            <ul className=\"navbar-nav\"> {props.children}</ul>\n        </nav >\n    );\n}\n\nexport function NavItem(props) {\n\n    const [open, setOpen] = useState(false);\n\n    return (\n        <li className=\"nav-item\">\n            <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\n                {props.icon}\n            </a>\n\n            {open && props.children}\n        </li>\n    )\n}\n\nexport function NavBurger() {\n\n    const [collapsed, setCollapsed] = useState(true);\n\n    return (\n        <NavItem\n            icon={<HamburgerIcon\n                onClick={() => setCollapsed(!collapsed)}\n                className={`hamburger ${collapsed ? \"\" : \"opened\"}`}\n            />}>\n            <DropdownMenu></DropdownMenu>\n          </NavItem>\n    );\n}\n\nexport function DropdownMenu() {\n\n    const [activeMenu, setActiveMenu] = useState('main');\n    const [menuHeight, setMenuHeight] = useState(null);\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n        setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\n    }, [])\n\n    function calcHeight(el) {\n        const height = el.offsetHeight;\n        setMenuHeight(height);\n    }\n\n    function DropdownItem(props) {\n        return (\n            <a href=\"#\" className=\"menu-item\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\n                <span className=\"icon-button\">{props.leftIcon}</span>\n                {props.children}\n                <span className=\"icon-right\">{props.rightIcon}</span>\n            </a>\n        )\n    }\n\n    return (\n        <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\n\n            <CSSTransition\n                in={activeMenu === 'main'}\n                timeout={500}\n                classNames=\"menu-primary\"\n                unmountOnExit\n                onEnter={calcHeight}>\n                <div className=\"menu\">\n                    <DropdownItem\n                        leftIcon={<UserIcon />}\n                    >Resume</DropdownItem>\n\n                    <DropdownItem\n                        leftIcon={<GearIcon />}\n                        rightIcon={<ArrowRightIcon />}\n                        goToMenu=\"animals\">\n                        Projects\n          </DropdownItem>\n\n                    <DropdownItem\n                        leftIcon={<LinkIcon />}\n                        rightIcon={<ArrowRightIcon />}\n                        goToMenu=\"settings\">\n                        Links\n          </DropdownItem>\n\n                </div>\n            </CSSTransition>\n\n            <CSSTransition\n                in={activeMenu === 'settings'}\n                timeout={500}\n                classNames=\"menu-secondary\"\n                unmountOnExit\n                onEnter={calcHeight}>\n                <div className=\"menu\">\n                    <DropdownItem goToMenu=\"main\" leftIcon={<ArrowLeftIcon />}>\n                        <h2></h2>\n                    </DropdownItem>\n                    <DropdownItem leftIcon={<GithubIcon />}>Github</DropdownItem>\n                    <DropdownItem leftIcon={<LinkedInIcon />}>LinkedIn</DropdownItem>\n                    <DropdownItem leftIcon={<TwitterIcon />}>Twitter</DropdownItem>\n                    <DropdownItem leftIcon={<DiscordIcon />}>Discord</DropdownItem>\n                    <DropdownItem leftIcon={<SlackIcon />}>Slack</DropdownItem>\n                    <DropdownItem leftIcon={<InstructablesIcon />}>Instructables</DropdownItem>\n                </div>\n            </CSSTransition>\n\n            <CSSTransition\n                in={activeMenu === 'animals'}\n                timeout={500}\n                classNames=\"menu-secondary\"\n                unmountOnExit\n                onEnter={calcHeight}>\n                <div className=\"menu\">\n                    <DropdownItem goToMenu=\"main\" leftIcon={<ArrowLeftIcon />}>\n                        <h2>Animals</h2>\n                    </DropdownItem>\n                    <DropdownItem leftIcon=\"🦘\">Kangaroo</DropdownItem>\n                    <DropdownItem leftIcon=\"🐸\">Frog</DropdownItem>\n                    <DropdownItem leftIcon=\"🦋\">Horse?</DropdownItem>\n                    <DropdownItem leftIcon=\"🦔\">Hedgehog</DropdownItem>\n                </div>\n            </CSSTransition>\n        </div>\n    );\n}",{"ruleId":"20","severity":1,"message":"21","line":3,"column":10,"nodeType":"22","messageId":"23","endLine":3,"endColumn":23},{"ruleId":"20","severity":1,"message":"24","line":4,"column":37,"nodeType":"22","messageId":"23","endLine":4,"endColumn":49},{"ruleId":"25","severity":1,"message":"26","line":30,"column":13,"nodeType":"27","endLine":30,"endColumn":80},{"ruleId":"25","severity":1,"message":"26","line":71,"column":13,"nodeType":"27","endLine":71,"endColumn":111},{"ruleId":"28","severity":1,"message":"29","line":118,"column":25,"nodeType":"27","endLine":118,"endColumn":29},"no-unused-vars","'CSSTransition' is defined but never used.","Identifier","unusedVar","'DropdownMenu' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader."]